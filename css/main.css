body, html {
      height: 95%; /* Make sure the body takes the full screen height */
      box-sizing: border-box; /* Include padding in the total width/height */
    }
        .draggable {
            position: absolute;
            cursor: move;
        }
.menu-btn {
    position: fixed;
    bottom: 20px; /* Bottommost */
    right: 20px;
    width: 50px;
    height: 50px;
    background-color: #007bff;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    font-size: 20px;
    z-index: 999;
}
.menu-btn.active {
    background-color: grey;
}

.home-btn {
    position: fixed;
    bottom: 75px; /* 55px above the menu button */
    right: 20px;
    width: 50px;
    height: 50px;
    background-color: #6c757d; /* Gray color */
    color: white;
    border-radius: 50%;
    display: none; /* Hidden by default */
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    font-size: 20px;
    z-index: 1000;
    transition: background-color 0.3s ease, transform 0.2s ease;
}
.home-btn:hover {
    background-color: #5a6268;
    transform: scale(1.05);
}

.clean-btn {
    position: fixed;
    bottom: 130px; /* 55px gap from home-btn */
    right: 20px;
    width: 50px;
    height: 50px;
    background-color: #dc3545;
    color: white;
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    font-size: 20px;
    z-index: 1000;
}

.auto-arrange-btn {
    position: fixed;
    bottom: 185px; /* 55px gap from clean-btn */
    right: 20px;
    width: 50px;
    height: 50px;
    background-color: #007bff;
    color: white;
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    font-size: 20px;
    z-index: 1000;
}

.add-card-btn {
    position: fixed;
    bottom: 240px; /* 55px gap from auto-arrange-btn */
    right: 20px;
    width: 50px;
    height: 50px;
    background-color: #28a745;
    color: white;
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: none;
    cursor: pointer;
    font-size: 20px;
    z-index: 1000;
}




        .options-menu {
            position: absolute;
            top: 10px;
            right: 10px;
        }
        .ui-resizable-se {
            bottom: 0;
            right: 0;
            width: 10px;
            height: 10px;
            background: transparent;
        }
        .fixed-card {
            position: fixed;
            bottom: 20px;
            left: 20px;
            width: 18rem;
            z-index: 1000;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional shadow */
        }
		
		#card-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* Create columns that auto-fill */
    gap: 5px; /* 5px gap between cards */
	padding: 10px;
    width: 100%; /* Take up the full width of the container */
    height: 100%; /* Take up the full height of the viewport */
    box-sizing: border-box; /* Include padding and border in width/height calculations */
}

.card {
    background-color: #f8f9fa; /* Light background color for visibility */
    border: 1px solid #ddd; /* Optional border for clarity */
    border-radius: 8px; /* Optional rounded corners */
    padding: 10px; /* Padding inside the card */
    height: auto; /* Card height auto-adjusts based on content */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    box-sizing: border-box;
    transition: transform 0.3s ease; /* Optional transition for interaction */
}
